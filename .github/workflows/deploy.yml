name: Deploy SkillMap Engine

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_BUILDKIT: 0
  COMPOSE_DOCKER_CLI_BUILD: 0

jobs:
  deploy:
    runs-on: self-hosted
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy SkillMap Engine
      run: |
        set -e
        
        echo "🚀 Starting deployment process..."
        
        # Navigate to project directory
        cd ${{ github.workspace }}
        
        # Copy .env file from main project if it doesn't exist
        if [ ! -f .env ]; then
          echo "📄 Copying .env file from main project..."
          cp /home/aahil/projects/skillmap_engine/.env .env || echo "Could not copy .env file"
        fi
        
        # Backup current .env file
        cp .env .env.backup || echo "No .env file to backup"
        
        # Force stop and remove containers to avoid permission issues
        echo "🛑 Force stopping existing containers..."
        docker-compose down --timeout 5 || true
        docker stop $(docker ps -aq) 2>/dev/null || true
        docker rm $(docker ps -aq) 2>/dev/null || true
        
        # Remove old images and containers to free up space
        echo "🧹 Cleaning up old Docker resources..."
        docker system prune -f --volumes || true
        
        # Build and start containers
        echo "🔨 Building and starting containers..."
        docker-compose up --build -d --remove-orphans
        
        # Wait for containers to be ready
        echo "⏳ Waiting for containers to start..."
        sleep 30
        
        # Check container health
        echo "🏥 Checking container health..."
        docker-compose ps
        
        # Test health endpoint
        echo "🔍 Testing health endpoint..."
        for i in {1..5}; do
          if curl -f http://localhost:5005/health > /dev/null 2>&1; then
            echo "✅ Health check passed!"
            break
          else
            echo "❌ Health check failed, attempt $i/5"
            if [ $i -eq 5 ]; then
              echo "🚨 Health check failed after 5 attempts"
              docker-compose logs --tail=50
              exit 1
            fi
            sleep 10
          fi
        done
        
        # Show recent logs
        echo "📋 Recent logs:"
        docker-compose logs --tail=20
        
        echo "🎉 Deployment completed successfully!"
